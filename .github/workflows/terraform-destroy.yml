name: Destroy AWS Infras with Terraform

on:
  workflow_dispatch: # Allows manual triggering of the workflow

jobs:
  terraform_destroy:
    runs-on: ubuntu-latest
    environment:
      name: development

    steps:
    # Step 1: Checkout the repository
    - name: Checkout code
      uses: actions/checkout@v3

    - name: Configure AWS Credentials
      uses: aws-actions/configure-aws-credentials@v3
      with:
        aws-access-key-id: ${{ secrets.AWS_TERRAFORM_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_TERRAFORM_KEY }}
        aws-region: ${{ vars.AWS_REGION }}
        role-to-assume: arn:aws:iam::${{ vars.AWS_ACCOUNT_ID }}:role/TerraformExecutionRole
        role-session-name: GitHubActionsTerraformDestroy

    # Step 2: Set up Terraform
    - name: Set up Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: 1.4.0

    # Step 3: Restore Terraform Cache (optional, for efficiency)
    - name: Restore Terraform Cache
      uses: actions/cache@v3
      with:
        path: terraform/.terraform
        key: terraform-${{ runner.os }}-${{ hashFiles('**/*.tf') }}
        restore-keys: |
          terraform-${{ runner.os }}-

    # Step 4: Terraform Init
    - name: Terraform Init
      working-directory: terraform
      run: terraform init

    - name: Terraform Plan
      working-directory: terraform
      run: terraform plan
      
    - name: Terraform Destroy
      if: ${{ success() }}
      working-directory: terraform
      run: terraform destroy -auto-approve
